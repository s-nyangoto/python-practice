"""
Key Terms
List - An ordered collection of values enclosed in square brackets []. Useful for storing sequences of items.

Index - The numeric position of an item in a list. Starts at 0 for first item. Used to access items by position.

Iteration - Repeated execution of code on successive list items. Done in Python with a for-in loop.

Dictionary - Unordered collection of key-value pairs denoted with curly braces {}. Keys map to associated values.

Key - Unique identifier that is used to look up values in a dictionary. Looks up are very fast.

Value - Data associated with a given key in a dictionary. Values can be any Python data type.

Tuple - Fixed-size, immutable ordered collection similar to a list. Denoted with (). Useful when data shouldn't change.

Set - Unordered collection of unique objects. Helpful for removing duplicates and set operations.

Membership - Ability to check if a value is contained in a collection like lists, dictionaries, tuples, or sets.

Methods - Built-in functions that allow manipulating and interacting with data structures.

Iteration - The process of repeatedly executing code on each item in a collection one by one.
"""

# LIST 
nums = [1, 2, 3] # Ordered collection in square brackets
print(nums[0]) # Access first item using INDEX 0 

for n in nums: # ITERATE over list
  print(n) 

# DICTIONARY  
airports = {"SFO": "San Francisco", "LAX": "Los Angeles"} # Key-value pairs in {}
print(airports["SFO"]) # Use KEY to access VALUE

for code in airports: 
  print(airports[code]) # VALUE for each KEY
  
# TUPLE  
colors = ("red", "green", "blue") # Immutable ordered collection
print(colors[2]) 

# SET
unique_codes = {"SFO", "LAX", "SFO"} # Only 1 SFO 
print(len(unique_codes)) # Length is 2 (no duplicates)
unique_codes.pop() # Remove item (no index needed)

# MEMBERSHIP check with IN  
print("SFO" in airports) # True, has key

# METHOD to add items
unique_codes.add("ORD")
